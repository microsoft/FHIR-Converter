name: $(Date:yyyyMMdd)$(Rev:.r)

trigger:
- main
- master
- dotliquid
- refs/heads/dotliquid
pr: ['dotliquid']



variables:
  solution: '**/*.sln'
  unitTestProjects: "**/*UnitTests/*.csproj"
  publishProject: "**/*Tool/*.csproj"
  functionalTests: "**/*FunctionalTests/*.csproj"
  buildConfiguration: 'Release'
  major: 3
  minor: 1
  bulidnum: $[counter(format('{0}.{1}',variables['major'],variables['minor']), 100)]
  revision: $[counter(format('{0:yyyyMMdd}', pipeline.startTime), 1)]
  version: $(major).$(minor).$(bulidnum).$(revision)

stages:


- stage: FunctionalTests
  jobs:
  - job: Windows_Functional_Test
    pool:
        vmImage: 'windows-latest'
    continueOnError: true
    steps:
    - checkout: none #skip checking out the default repository resource
    - task: DownloadBuildArtifacts@0
      displayName: 'Download Artifacts'
      inputs:
        artifactName: FhirConverterBuild
        downloadPath: $(System.DefaultWorkingDirectory)
    - script: |
        git clone -q https://github.com/sowu880/dockerfiles-windows.git
        cd dockerfiles-windows/registry/
        docker build -t registry-windows:2.7.1 .
        docker run --rm -d -p 5000:5000 --isolation=hyperv --name registry registry-windows:2.7.1
      displayName: start registry

    #- script: |
    #    docker pull mcr.microsoft.com/windows/servercore:ltsc2019
    #    docker tag mcr.microsoft.com/windows/servercore:ltsc2019 localhost:5000/windows
    #    docker push localhost:5000/windows
    #  displayName: test push

    - script: |
        dotnet test **/*FunctionalTests.dll
      displayName: Functional Tests
    - task: Docker@2
      displayName: stop registry
      condition: succeededOrFailed()
      inputs:
        command: stop
        container: registry

  - job: Linux_Functional_Test
    pool:
      vmImage: 'ubuntu-latest'
    continueOnError: true
    steps:
    - checkout: none #skip checking out the default repository resource
    - task: DownloadBuildArtifacts@0
      displayName: 'Download Artifacts'
      inputs:
        artifactName: FhirConverterBuild
        downloadPath: $(System.DefaultWorkingDirectory)
    - script: |
        docker run --rm -d -p 5000:5000 --name registry registry:2
      displayName: start registry
    - script: |
        dotnet test **/*FunctionalTests.dll
      displayName: Functional Tests
    - task: Docker@2
      displayName: stop registry
      condition: succeededOrFailed()
      inputs:
        command: stop
        container: registry
  
- stage: Release
  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/main'))
  jobs:
  - job: publish
    pool:
        vmImage: 'windows-latest'
    steps:
    - checkout: none #skip checking out the default repository resource
    - task: DownloadBuildArtifacts@0
      displayName: 'Download Artifacts'
      inputs:
        artifactName: FhirConverterBuild
        downloadPath: $(System.DefaultWorkingDirectory)

    - task: GithubRelease@0 
      displayName: 'Create GitHub Release'      
      inputs:
        gitHubConnection: githubpipeline
        repositoryName: microsoft/FHIR-Converter
        isDraft: true
        tagSource: manual
        tag: v$(major).$(minor).$(bulidnum)      
        assets: |
          $(System.DefaultWorkingDirectory)/FhirConverterBuild/bin/**
          $(System.DefaultWorkingDirectory)/FhirConverterBuild/data/Templates/DefaultTemplates.tar.gz




