name: $(Date:yyyyMMdd)$(Rev:.r)

trigger:
- dotliquid
- refs/heads/dotliquid
pr: ['dotliquid']

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  testProjects: "**/*Tests/*.csproj"
  publishProject: "**/*Tool/*.csproj"
  buildConfiguration: 'Release'
  major: 1
  minor: 0
  bulidnum: $[counter(format('{0}.{1}',variables['major'],variables['minor']), 100)]
  revision: $[counter(format('{0:yyyyMMdd}', pipeline.startTime), 1)]
  version: $(major).$(minor).$(bulidnum).$(revision)

steps:
- script: echo $(version)

- task: DotNetCoreCLI@2
  displayName: 'dotnet build'
  inputs:
    command: build
    projects: '$(solution)'
    arguments: '--configuration $(buildConfiguration) -p:Version=$(version)'
        
- task: DotNetCoreCLI@2
  displayName: 'dotnet test'
  inputs:
    command: test
    projects: '$(testProjects)'
    arguments: '--configuration $(buildConfiguration) --collect "Code coverage"'
    nobuild: true
    
- task: DotNetCoreCLI@2
  displayName: 'dotnet publish'
  inputs:
    command: 'publish'
    projects: '$(publishProject)'
    arguments: '--configuration $(buildConfiguration) --output $(Build.BinariesDirectory)/tool'
    nobuild: true
    publishWebProjects: false
    zipAfterPublish: True
      
- task: DotNetCoreCLI@2
  displayName: 'dotnet pack nugets'
  inputs:
    command: custom
    custom: pack
    arguments: >
      --configuration $(buildConfiguration)
      --output $(Build.ArtifactStagingDirectory)/nupkgs
      --no-build
      -p:NuspecProperties="version=$(version)"

- task: PublishBuildArtifacts@1
  displayName: 'publish binary artifacts'
  inputs:
    pathToPublish: '$(Build.BinariesDirectory)/tool' 
    artifactName: 'FhirConverterBuild'

- task: PublishBuildArtifacts@1
  displayName: 'publish nuget artifacts'
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)/nupkgs'
    artifactName: 'nuget'
    publishLocation: 'container'